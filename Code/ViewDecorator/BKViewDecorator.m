//
// Created by Bruno Wernimont on 2012
// Copyright 2012 BaseKit
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#import "BKViewDecorator.h"


////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@interface BKViewDecorator ()



@end


////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@implementation BKViewDecorator

@synthesize objectClass = _objectClass;
@synthesize buttonDecorators = _buttonDecorators;
@synthesize labelDecorators = _labelDecorators;
@synthesize viewDecorators = _viewDecorators;


////////////////////////////////////////////////////////////////////////////////////////////////////
- (id)init {
    self = [super init];
    
    if (self) {
        self.buttonDecorators = [NSMutableDictionary dictionary];
        self.labelDecorators = [NSMutableDictionary dictionary];
        self.viewDecorators = [NSMutableDictionary dictionary];
        
        [self decorateButtons];
        [self decorateLabels];
        [self decorateViews];
    }
    
    return self;
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)decorateButtonWithIdentifier:(NSString *)identifier block:(BKButtonDecoratorBlock)block {
    [self.buttonDecorators setObject:[block copy] forKey:identifier];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)decorateLabelWithIdentifier:(NSString *)identifier block:(BKLabelDecoratorBlock)block {
    [self.labelDecorators setObject:[block copy] forKey:identifier];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)decorateViewWithIdentifier:(NSString *)identifier block:(BKViewDecoratorBlock)block {
    [self.viewDecorators setObject:[block copy] forKey:identifier];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)decorateButtons {
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)decorateLabels {
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)decorateViews {
}


@end
